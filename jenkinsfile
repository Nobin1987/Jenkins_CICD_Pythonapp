pipeline {
    agent any
    environment {
        GIT_REPO = "https://github.com/Nobin1987/Jenkins_CICD_Pythonapp.git"
        SSH_CRED_ID = "appserver"
        EC2_USER = "ubuntu"
        EC2_HOST = "18.224.4.140"
        BUILD_STATUS = "SUCCESS"  // Default
        VENV_PATH = "/tmp/${env.JOB_NAME}-${env.BUILD_ID}-venv"
        APP_PATH = "/home/ubuntu/Jenkins_CICD_Pythonapp"
    }
    triggers {
        githubPush()
    }

    stages {
        stage('Code cloning') {
            steps {
                echo 'Cloning the code'
                git branch: 'main', url: "${env.GIT_REPO}"
            }
        }  // Missing closing bracket for stage 'Code cloning'

        stage('Build') {
            steps {
                sh """
                    python3 -m venv ${VENV_PATH}
                    . ${VENV_PATH}/bin/activate
                    pip install -r requirements.txt
                """
            }
        }

        stage('Test') {
            steps {
                sh """
                    . ${VENV_PATH}/bin/activate
                    export PYTHONPATH=\${WORKSPACE}:\$PYTHONPATH
                    echo "Current directory: \$(pwd)"
                    echo "Contents of current directory: \$(ls -la)"
                    echo "Python path: \$PYTHONPATH"
                    pytest Tests -v
                """
            }
        }
        
        stage('Push to EC2') {
            when {
                expression {
                    return currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                sshagent(credentials: ['ec2-webserver']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} '
                        cd ${APP_PATH}
                        git pull origin main
                        source venv/bin/activate
                        pip install -r requirements.txt
                        sudo systemctl restart flaskapp
                        '
                    """
                }
            }
        }
    }  // Closing stages block

    post {
        success {
            echo "Pipeline succeeded! Application deployed to staging."
        }
        failure {
            echo "Pipeline failed. Check the logs for details."
        }
        always {
            sh "rm -rf ${VENV_PATH}"
        }
    }
}
