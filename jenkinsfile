pipeline {
    agent any
    environment {
        GIT_REPO = "https://github.com/Nobin1987/Jenkins_CICD_Pythonapp.git"
        SSH_CRED_ID = "ec2_webapp"
        EC2_USER = "ubuntu"
        EC_HOST = "18.224.136.215"
        BUILD_STATUS = "SUCESS"  // Default
        VENV_PATH = "/tmp/${env.JOB_NAME}-${env.BUILD_ID}-venv"
        APP_PATH = "/home/ubuntu"
    }
    triggers {
        githubPush()
    }

    stages {
        stage('Code cloning') {
            steps {
                echo 'Cloning the code'
                git branch: 'main' , url : "${env.GIT_REPO}"
            }

        stage('Build') {
            steps {
                sh """
                    python3 -m venv ${VENV_PATH}
                    . ${VENV_PATH}/bin/activate
                    pip3 install -r requirements.txt
                """
            }
        }

        stage('Test') {
            steps {
                sh """
                    . ${VENV_PATH}/bin/activate
                    export PYTHONPATH=\${WORKSPACE}:\$PYTHONPATH
                    echo "Current directory: \$(pwd)"
                    echo "Contents of current directory: \$(ls -la)"
                    echo "Python path: \$PYTHONPATH"
                    pytest Tests -v
                """
            }
        }
        
        stage('Push to EC2') {
            when {
                expression {
                    return currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {

                sshagent (credentials: ["${env.SSH_CRED_ID}"]) {
                       sh """
                            ssh ${EC2_USER}@${EC2_HOST} << EOF
                            cd ${APP_PATH}
                            git pull origin ${BRANCH_NAME}
                            source venv/bin/activate
                            pip install -r requirements.txt
                            sudo systemctl restart flaskapp
                            EOF
                        """
                }
            }
        
    }
    
    }
post {
        success {
            echo "Pipeline succeeded! Application deployed to staging."
        }
        failure {
            echo "Pipeline failed. Check the logs for details."
        }
        always {
            sh "rm -rf ${VENV_PATH}"
        }
    }
}